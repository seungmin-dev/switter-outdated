{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditting","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","ref","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","sweetArray","docs","map","sytle","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMySweets","where","orderBy","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","currentUser","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAqBAA,IAASC,cARc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAGF,IAAMC,EAAmBR,IACnBS,EAAcT,IAASU,OACvBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,U,OCqBxBC,EA3CE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAKbC,EAAW,SAACC,GAAW,IAAD,EACQA,EAAzBC,OAASC,EADQ,EACRA,KAAMC,EADE,EACFA,MACV,UAATD,EACCV,EAASW,GACK,aAAPD,GACPR,EAAYS,IAGdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAINX,EAJM,gCAKQZ,EAAYwB,+BAA+BhB,EAAOE,GAL1D,OAKLe,EALK,+CAOQzB,EAAY0B,2BAA2BlB,EAAOE,GAPtD,QAOLe,EAPK,eASTE,QAAQC,IAAIH,GATH,kDAWTE,QAAQC,IAAR,MACAb,EAAS,KAAMc,SAZN,0DAAH,sDAgBd,OACI,qCACA,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACI,uBAAOX,KAAK,QAAQY,KAAK,QAAQC,YAAY,QAAQC,UAAQ,EAACb,MAAOZ,EAAOQ,SAAUA,EAAUc,UAAU,cAC1G,uBAAOX,KAAK,WAAWY,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACb,MAAOV,EAAUM,SAAUA,EAAUc,UAAU,cACtH,uBAAOC,KAAK,SAASD,UAAU,uBAAuBV,MAAOR,EAAa,iBAAmB,YAC5FE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAE3C,sBAAMoB,QATY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MASnBL,UAAU,aAAxC,SAAsDlB,EAAa,UAAY,uBCXxEwB,EAvBF,WACT,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAGN,YAFGH,EAASF,EAAjBC,OAAQC,MAGXmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACtB,WAATpB,IACNmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBANvB,SAQZxC,EAAYyC,gBAAgBH,GARhB,2CAAH,sDAUnB,OACI,sBAAKR,UAAU,gBAAf,UACI,cAAC,IAAD,CAAiBY,KAAMC,IAAWC,MAAO,UAAWC,KAAK,KAAKC,MAAO,CAACC,aAAc,MACpF,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCAAuF,cAAC,IAAD,CAAiBY,KAAMM,SAC9G,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCAAuF,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCiC/GC,EAnDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACN7C,oBAAS,GADH,mBAC9B8C,EAD8B,KACrBC,EADqB,OAEL/C,mBAAS4C,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAG/BC,EAAa,uCAAG,sBAAApC,EAAA,0DACPqC,OAAOC,QAAQ,+CADR,gCAGR1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,uBAIR3D,EAAe4D,IAAIb,EAASc,eAAeF,SAJnC,2CAAH,qDAObG,EAAgB,kBAAMZ,GAAY,SAACnB,GAAD,OAAWA,MAC7Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAOC,IAHE,OAKbF,GAAY,GALC,2CAAH,sDAWd,OAAQ,qBAAKxB,UAAU,QAAf,SACHuB,EACG,qCACI,uBAAMhC,SAAUA,EAAUS,UAAU,sBAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBZ,MAAOoC,EAAUvB,UAAQ,EAACmC,WAAS,EAACpD,SARpF,SAACC,GAAW,IACPG,EAAUH,EAApBC,OAAUE,MAClBqC,EAAYrC,IAMyGU,UAAU,cACnH,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAExD,wBAAQI,QAASgC,EAAepC,UAAU,oBAA1C,uBAGJ,qCACI,6BAAKqB,EAASI,OACbJ,EAASc,eAAiB,qBAAKI,IAAKlB,EAASc,gBAC7Cb,GACG,sBAAKkB,MAAM,iBAAX,UACI,sBAAMpC,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM6B,QAE3B,sBAAMrC,QAASgC,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QCsBpCC,EA9DM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRnE,mBAAS,IADD,mBAC3BoE,EAD2B,KACpBC,EADoB,OAEErE,mBAAS,IAFX,mBAE3BsE,EAF2B,KAEfC,EAFe,KAG5BzD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACC,KAAVqD,EADS,oDAIb1D,EAAMM,iBACF0C,EAAgB,GACD,KAAfY,EANS,wBAOHE,EAAgB3E,EAAe4D,MAAMgB,MAArB,UAA8BN,EAAQO,IAAtC,YAA6CC,gBAP1D,SAQcH,EAAcI,UAAUN,EAAY,YARlD,cAQHO,EARG,iBASaA,EAASpB,IAAIqB,iBAT1B,QASTpB,EATS,sBAWPd,EAAW,CACbI,KAAOoB,EACPW,UAAYC,KAAKC,MACjBC,UAAYf,EAAQO,IACpBhB,iBAfS,UAiBP/D,EAAUwF,WAAW,UAAUC,IAAIxC,GAjB5B,QAkBbyB,EAAS,IACTE,EAAc,IAnBD,4CAAH,sDAoCd,OACI,uBAAMzD,SAAUA,EAAUiD,MAAM,cAAhC,UACI,sBAAKxC,UAAU,0BAAf,UACI,uBAAOA,UAAU,sBAAsBV,MAAOuD,EAAO3D,SAlBhD,SAACC,GAAW,IACVG,EAAUH,EAAlBC,OAAQE,MACfwD,EAASxD,IAgBwEW,KAAK,OAAOC,YAAY,uBAAuB4D,UAAW,MACnI,uBAAO7D,KAAK,SAASX,MAAM,SAASU,UAAU,2BAElD,wBAAO+D,IAAI,cAAc/D,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBY,KAAMoD,SAE3B,uBAAOhC,GAAG,cAAc/B,KAAK,OAAOgE,OAAO,UAAU/E,SArBxC,SAACC,GAAW,IAEvB+E,EADmB/E,EAAlBC,OAAQ+E,MACO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACXC,EAAWD,EAA5BE,cAAiBD,OACxBxB,EAAcwB,IAElBJ,EAAOM,cAAcR,IAa4DlD,MAAO,CAAC2D,QAAU,KAC9F5B,GAAc,sBAAK/C,UAAU,0BAAf,UACX,qBAAKuC,IAAKQ,EAAY/B,MAAO,CAAC4D,gBAAiB7B,KAC/C,sBAAK/C,UAAU,qBAAqBI,QAdtB,WAAO4C,EAAc,KAcnC,UACI,0CACA,cAAC,IAAD,CAAiBpC,KAAMiE,gBCjC5BC,EAtBF,SAAC,GAAe,IAAdlC,EAAa,EAAbA,QAAa,EACInE,mBAAS,IADb,mBACjBsG,EADiB,KACTC,EADS,KAWxB,OATAC,qBAAU,WACN7G,EAAUwF,WAAW,UAAUsB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACvD,GAAD,oBACjCC,GAAID,EAAIC,IACLD,EAAIpC,WAEXqF,EAAUI,QAEf,IAEC,sBAAKpF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc4C,QAASA,IACvB,qBAAK2C,MAAO,CAACC,UAAY,IAAzB,SACKT,EAAOO,KAAI,SAAAzC,GAAK,OACb,cAAC,EAAD,CAAsBxB,SAAUwB,EAAOvB,QAASuB,EAAMc,YAAcf,EAAQO,KAAhEN,EAAMb,aCgBvByD,EAjCC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAa9C,EAAa,EAAbA,QACrB+C,EAAUC,cADwB,EAEInH,mBAASmE,EAAQiD,aAFrB,mBAEjCC,EAFiC,KAEjBC,EAFiB,KAWlCxG,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBACHmD,EAAQiD,cAAgBC,EAFd,gCAGHlD,EAAQoD,cAAc,CACxBH,YAAcC,IAJT,OAMTJ,IANS,2CAAH,sDASRO,EAAW,uCAAG,sBAAAzG,EAAA,sEACKpB,EAAUwF,WAAW,UAAUsC,MAAM,YAAa,KAAMtD,EAAQO,KAAKgD,QAAQ,aAAaC,MAD/F,yDAAH,qDAMjB,OAHAnB,qBAAU,WACNgB,MACD,IACI,sBAAKjG,UAAU,YAAf,UACH,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACI,uBAAOd,SArBE,SAAAC,GAAU,IACLG,EAAUH,EAApBC,OAAUE,MAClByG,EAAkBzG,IAmBaW,KAAK,OAAOqC,WAAS,EAACpC,YAAY,eAAeZ,MAAOwG,EAAgB9F,UAAU,cAC7G,uBAAOC,KAAK,SAASX,MAAM,iBAAiBU,UAAU,UAAUgB,MAAO,CAACwE,UAAW,SAEvF,wBAAQxF,UAAU,2BAA2BI,QA5B3B,WAClBlC,EAAYmI,UACZV,EAAQW,KAAK,MA0Bb,yBCZOC,EAjBI,SAAC,GAAD,IAAE3D,EAAF,EAAEA,QAAF,OAAe,8BAC9B,qBAAI5B,MAAO,CAAEwF,QAAS,OAAQC,eAAgB,SAAUjB,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMkB,GAAG,IAAI1F,MAAO,CAAE2F,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiB/F,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACA,eAAC,IAAD,CAAM2F,GAAG,WAAW1F,MAAO,CAAE4F,WAAY,GAAIJ,QAAS,OAAQK,cAAe,SAAUC,WAAY,SAAUC,SAAU,IAAvH,UACI,cAAC,IAAD,CAAiBnG,KAAMoG,IAAQlG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEwE,UAAW,IAA1B,SACK5C,EAAQiD,YAAR,UAAyBjD,EAAQiD,YAAjC,kBAA0D,uBCgB5DoB,EA1BG,SAAC,GAAwC,IAAvCvB,EAAsC,EAAtCA,YAAawB,EAAyB,EAAzBA,WAAYtE,EAAa,EAAbA,QACzC,OACI,eAAC,IAAD,WACKsE,GAAc,cAAC,EAAD,CAAYtE,QAASA,IACpC,cAAC,IAAD,UACKsE,EACD,sBAAKlG,MAAO,CAACmG,SAAU,IAAKC,MAAO,OAAQC,OAAQ,SAAU7B,UAAW,GAAIgB,QAAQ,OAAQC,eAAe,UAA3G,UACI,cAAC,IAAD,CAAOa,MAAM,OAAOC,KAAK,IAAzB,SACI,cAAC,EAAD,CAAM3E,QAASA,MAEnB,cAAC,IAAD,CAAO0E,MAAM,OAAOC,KAAK,WAAzB,SACI,cAAC,EAAD,CAAS3E,QAASA,EAAS8C,YAAaA,MAE5C,cAAC,IAAD,CAAU8B,KAAK,IAAId,GAAG,SAEzB,qCAAE,cAAC,IAAD,CAAOY,MAAM,OAAOC,KAAK,IAAzB,SACK,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAUC,KAAK,IAAId,GAAG,eCe3Be,MAnCf,WAAgB,IAAD,EACWhJ,oBAAS,GADpB,mBACNiJ,EADM,KACAC,EADA,OAEuBlJ,mBAASP,EAAY0J,aAF5C,gCAGiBnJ,mBAAS,OAH1B,mBAGNmE,EAHM,KAGGiF,EAHH,KA4Bb,OAxBA5C,qBAAU,WACR/G,EAAY4J,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTlC,YAAckC,EAAKlC,YACnB1C,IAAM4E,EAAK5E,IACX6C,cAAgB,SAACgC,GAAD,OAAUD,EAAK/B,cAAcgC,KAGpC,MAEbL,GAAQ,QAEV,IAYA,mCACGD,EAAO,cAAC,EAAD,CAAWhC,YAZH,WAClB,IAAMqC,EAAO7J,EAAY0J,YACtBG,GACDF,EAAW,CACThC,YAAckC,EAAKlC,YACnB1C,IAAM4E,EAAK5E,IACX6C,cAAgB,SAACgC,GAAD,OAAUD,EAAK/B,cAAcgC,OAMFd,WAAYe,QAAQrF,GAAUA,QAASA,IAAc,qB,MC7BxGsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7cd532fc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: process.env.REACT_APP_API_KEY,\r\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n//   projectId: process.env.REACT_APP_PROJECT_ID,\r\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n//   appId: process.env.REACT_APP_APP_ID\r\n// };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCR9ZOoxlRtTBL1yfL2lWMp5uG9k8o2KDM\",\r\n  authDomain: \"switter-4148e.firebaseapp.com\",\r\n  projectId: \"switter-4148e\",\r\n  storageBucket: \"switter-4148e.appspot.com\",\r\n  messagingSenderId: \"602960613205\",\r\n  appId: \"1:602960613205:web:05ed20b43ff79e8f45a9dc\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value)\r\n        } else if( name===\"password\") {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            console.log(error);\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n            <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AuthForm;","import React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{marginBottom: 30}} />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sweet = ({ sweetObj, isOwner }) => {\r\n    const [editing, setEditting] = useState(false);\r\n    const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\r\n        if( ok) {\r\n            await dbService.doc(`sweets/${sweetObj.id}`).delete();\r\n            await storageService.ref(sweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditting((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`sweets/${sweetObj.id}`).update({\r\n            text : newSweet\r\n        });\r\n        setEditting(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { target : {value}} = event;\r\n        setNewSweet(value);\r\n    };\r\n    return (<div className=\"sweet\">\r\n        {editing ? (\r\n            <>\r\n                <form onSubmit={onSubmit} className=\"container sweetEdit\">\r\n                    <input type=\"text\" placeholder=\"Edit your sweet\" value={newSweet} required autoFocus onChange={onChange} className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\r\n                </form>\r\n                <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n            </>\r\n            ) : \r\n            <>\r\n                <h4>{sweetObj.text}</h4>\r\n                {sweetObj.attachmentUrl && <img src={sweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div class=\"sweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n    const [sweet, setSweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if( sweet === \"\" ) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if( attachment !== \"\" ) {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const sweetObj = {\r\n            text : sweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl\r\n        }   \r\n        await dbService.collection(\"sweets\").add(sweetObj);\r\n        setSweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setSweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget : {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => {setAttachment(\"\")};\r\n    return (\r\n        <form onSubmit={onSubmit} class=\"factoryForm\" >\r\n            <div className=\"factoryInput__container\">\r\n                <input className=\"factoryInput__input\" value={sweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add Photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity : 0}} />\r\n            {attachment && <div className=\"factoryForm__attachment\">\r\n                <img src={attachment} style={{backgroundImage: attachment}} />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SweetFactory;","import React, {useEffect, useState} from \"react\";\r\nimport {dbService, storageService} from \"fbase\";\r\nimport Sweet from \"components/Sweet\";\r\nimport SweetFactory from \"components/SweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [sweets, setSweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"sweets\").onSnapshot((snapshot) => {\r\n            const sweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setSweets(sweetArray);\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <SweetFactory userObj={userObj} />\r\n            <div sytle={{marginTop : 30}}>\r\n                {sweets.map(sweet => \r\n                    <Sweet key={sweet.id} sweetObj={sweet} isOwner={sweet.creatorId === userObj.uid} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = event => {\r\n        const { target : {value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    const getMySweets = async () => {\r\n        const sweets = await dbService.collection(\"sweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\r\n    }\r\n    useEffect(() => {\r\n        getMySweets();\r\n    }, []);\r\n    return <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display Name\" value={newDisplayName} className=\"formInput\" />    \r\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop: 10}} />\r\n        </form>\r\n        <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</button></div>\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link to=\"/profile\" style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12, }} >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n            </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React, {useState} from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <div style={{maxWidth: 890, width: \"100%\", margin: \"0 auto\", marginTop: 80, display:\"flex\", justifyContent:\"center\"}}>\r\n                    <Route exact=\"true\" path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact=\"true\" path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </div> : \r\n                (<><Route exact=\"true\" path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </>)\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport React, {useEffect, useState} from \"react\";\n//import fbase from \"fbase\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {  \n    authService.onAuthStateChanged((user) => {\n      if( user) {\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    if(user) {\n      setUserObj({\n        displayName : user.displayName,\n        uid : user.uid,\n        updateProfile : (args) => user.updateProfile(args)\n      });\n    }\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n      {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n    </>)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from \"fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}